#!/usr/bin/env bash

msg() { echo "--> INFO $1"; }

err() { echo "--> ERROR $1"; exit 1; }

file="/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
#<<COMMENT
if [ -f "$file" ];then

  mv $file $file.original

fi
#COMMENT

LABEL_TAINT_ARGS=""

while [[ $1 =~ ^(--(token|labels|taints)) ]]
do
  key=$1
  value=$2

  case $key in
    --token)
        TOKEN="$value"
        shift
      ;;
    --labels)
        LABELS="$value"
        shift
      ;;
    --taints)
        TAINTS="$value"
        shift
      ;;
  esac
  shift # past argument or value
done

#TOKEN variable should be defined always. It's mandatory
[ -z "$TOKEN" ] && err "Please specify --token TOKEN argument"

#Defining KUBELET_LABEL_TAINT_ARGS variable when passing both LABELS and TAINTS
if [ -n "$LABELS" ] && [ -n "$TAINTS" ]; then

  LABEL_TAINT_ARGS="--node-labels=$LABELS --register-with-taints=$TAINTS"

  echo $KUBELET_LABEL_TAINT_ARGS

fi

#echo $KUBELET_LABEL_TAINT_ARGS
#echo $TOKEN $LABELS $TAINTS
#Defining KUBELET_LABEL_TAINT_ARGS variable when passing only LABELS
if [ -n "$LABELS" ] && [ -z "$TAINTS" ]; then

  LABEL_TAINT_ARGS="--node-labels=$LABELS"

  echo $KUBELET_LABEL_TAINT_ARGS

fi

#Defining KUBELET_LABEL_TAINT_ARGS variable when passing only TAINTS
if [ -z "$LABELS" ] && [ -n "$TAINTS" ]; then

  LABEL_TAINT_ARGS="--register-with-taints=$TAINTS"

  echo $KUBELET_LABEL_TAINT_ARGS

fi

#if [ -z "$LABELS" ] && [ -z "$TAINTS" ]; then
#
#LABEL_TAINT_ARGS=""
#echo Empty
#
#fi

cat << EOF > $file
[Service]
Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=cgroupfs"
Environment="KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests --allow-privileged=true"
Environment="KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin"
Environment="KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local"
Environment="KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook --client-ca-file=/etc/kubernetes/pki/ca.crt"
Environment="KUBELET_CADVISOR_ARGS=--cadvisor-port=0"
Environment="KUBELET_CERTIFICATE_ARGS=--rotate-certificates=true --cert-dir=/var/lib/kubelet/pki"
Environment="KUBELET_CLOUD_PROVIDER_ARGS=--cloud-provider=azure --cloud-config=/etc/kubernetes/azure.json"
Environment="KUBELET_LABEL_TAINT_ARGS=$LABEL_TAINT_ARGS"
ExecStart=
ExecStart=/usr/bin/kubelet \$KUBELET_KUBECONFIG_ARGS \$KUBELET_SYSTEM_PODS_ARGS \$KUBELET_NETWORK_ARGS \$KUBELET_DNS_ARGS \$KUBELET_AUTHZ_ARGS \$KUBELET_CADVISOR_ARGS \$KUBELET_CERTIFICATE_ARGS \$KUBELET_CLOUD_PROVIDER_ARGS \$KUBELET_LABEL_TAINT_ARGS \$KUBELET_EXTRA_ARGS
EOF

#Kubelet service should be restarted after configuration changed
systemctl daemon-reload && systemctl restart kubelet.service

#Trying to join this node to kubernetes cluster

kubeadm join --discovery-token-unsafe-skip-ca-verification --token "${TOKEN}" "master-node-0:6443"

if [ $? -ne 0]; then

err "Joining to cluster failed, aborting ..."

fi

